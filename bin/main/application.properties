spring.application.name=Nametrek API
# spring.devtools.restart.enabled=false

# Data source config
spring.datasource.url=jdbc:postgresql://localhost:5432/nametrek_test
spring.datasource.username=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Hibernate dialect and ddl auto
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

spring.redis.host=localhost
spring.redis.port=6379
spring.redis.password=

# spring.mail.host=smtp.gmail.com
# spring.mail.port=587
# Gmail config
spring.mail.host=smtp.gmail.com
spring.mail.port=25
spring.mail.username=${GMAIL_USERNAME}
spring.mail.password=${GMAIL_PASSWORD}

# spring.mail.properties.mail.smtp.ssl.enable=true
# spring.mail.properties.mail.smtp.auth=true


logging.level.org.springframework.web.socket=DEBUG
logging.level.org.springframework.messaging=DEBUG
# OAuth2 configuration
# spring.security.oauth2.client.registration.google.client-id=${GOOGLE_OAUTH_CLIENT_ID}
# spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_OAUTH_CLIENT_SECRET}
# spring.security.oauth2.client.registration.google.scope=https://www.googleapis.com/auth/gmail.send
# spring.security.oauth2.client.registration.google.refresh-token=${GOOGLE_OAUTH_REFRESH_TOKEN}

# SMPT properties
# spring.mail.properties.mail.smtp.auth=true
# spring.mail.properties.mail.smtp.starttls.enable=true
# spring.mail.properties.mail.smtp.auth.mechanisms=XOAUTH2
